{"version":3,"sources":["utils/CONSTANTS.js","contexts/PlayerProvider.js","contexts/TasksProvider.js","components/atoms/Button/Button.js","contexts/ToggleMenuProvider.js","components/molecules/HamburgerButton/HamburgerButton.js","components/atoms/PageHeader/PageHeader.js","components/atoms/ProgressRing/ProgressRing.js","components/atoms/ProgressBar/ProgressBar.js","utils/calcLvlProgressPerc.js","components/atoms/Input/Input.js","components/atoms/Label/Label.js","components/molecules/FormField/FormField.js","components/organisms/TaskForm/TaskForm.js","hooks/useToggle.js","components/organisms/HomeHeader/HomeHeader.js","components/organisms/SearchTask/SearchTask.js","hooks/useIntresectionObserver.js","utils/filterTaskArr.js","components/organisms/Task/Task.js","components/organisms/TaskList/TaskList.js","components/organisms/TaskCategories/TaskCategories.js","utils/scrollHorizontally.js","components/organisms/TaskCategoriesNav/TaskCategriesNav.js","components/pages/HomePage/HomePage.js","components/organisms/StatsHeader/StatsHeader.js","components/atoms/PieChart/PieChart.js","components/pages/StatsPage/StatsPage.js","components/pages/RewardsPage/RewardsPage.js","components/pages/SettingsPage/SettingsPage.js","components/pages/AboutPage/AboutPage.js","components/organisms/SideMenu/SideMenu.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Object","freeze","MAX_HP","LVL","REQUIRED_EXP","TASK_DIFFICULTY","EASY","MEDIUM","HARD","TASK_TYPE","TODO","SCHEDULE","HABIT","PLAYER_REDUCER","CHANGE_EXP","CHANGE_HP","TASK_REDUCER","ADD_TASK","REMOVE_TASK","FILTER_TASK","EDIT_TASK","SET_ACTIVE_CATEGORY","SET_COMPLITED_TASKS","COMPLITED_TASKS","SUCCESS","FAIL","playerReducer","state","action","type","newExp","exp","value","newLvl","lvl","newHp","hp","Error","initPlayerState","name","PlayerContext","createContext","displayName","PlayerProvider","children","useReducer","playerState","dispatch","Provider","taskReducer","console","log","newTask","length","id","localStorage","setItem","JSON","stringify","filter","task","index","findIndex","editedState","values","includes","newComplitedTasks","TasksContext","TasksProvider","parse","getItem","todos","dispatchTodos","schedules","dispatchSchedules","habits","dispatchHabits","dispatchFilter","activeCategory","dispatchCategory","complitedTasks","dispatchComplitedTasks","Button","handleClick","addClass","undefined","className","onClick","ev","ToggleMenuContext","ToggleMenuProvider","useState","isMenuOpen","setMenuToggle","pervState","HamburgerButton","useContext","toggleMenu","PageHeader","ProgressRing","radius","stroke","progressPerc","circumference","Math","PI","strokeDashoffset","width","height","strokeWidth","r","cx","cy","strokeDasharray","x","y","ProgressBar","percent","style","calcLvlProgressPerc","perc","Input","placeholder","handleChange","validation","attrs","onChange","Label","FormField","labelClass","inputClass","register","TaskForm","formToggler","handleSubmit","handleReset","required","isFormOpen","toggleForm","initialFormState","title","difficulty","formState","setFormState","difficultyLvls","onSubmit","preventDefault","onReset","target","map","difficultyLvl","parseInt","useToggle","initState","setState","propTypes","PropTypes","bool","isRequired","HomeHeader","dispatchTask","lvlProgressPrec","SearchTask","isHidden","toggleHidden","defaultOptions","root","rootMargin","threshold","useIntresectionObserver","refsArr","callback","options","useEffect","observer","IntersectionObserver","entries","forEach","ref","observe","refArr","arrayOf","string","func","object","filterTaskArr","tasks","filteredTask","indexOf","Task","taskType","dispatchPlayer","isOptionsBarOpen","toggleOptionsBar","difficultyIndex","i","push","removeTask","TaskList","forwardRef","tasksToShow","TaskCategories","taskListsRefs","dispatchActiveCat","current","entry","intersectionRatio","getAttribute","elem","scrollHorizontally","document","querySelector","scrollTo","top","left","offsetLeft","behavior","TaskCategoriesNav","activeCat","setActiveCatClass","HomePage","useRef","StatsHeader","PieChart","chartSlices","slicesArr","slice","arr","color","backgroundImage","join","StatsPage","todosState","schedulesState","habitsState","sum","failPerc","successPerc","RewardsPage","SettingsPage","AboutPage","SideMenu","to","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c2f10931.chunk.js","sourcesContent":["module.exports = Object.freeze({\r\n\tMAX_HP: 50,\r\n\tLVL: [\r\n\t\t{ REQUIRED_EXP: 5 },\r\n\t\t{ REQUIRED_EXP: 15 },\r\n\t\t{ REQUIRED_EXP: 30 },\r\n\t\t{ REQUIRED_EXP: 55 },\r\n\t\t{ REQUIRED_EXP: 75 },\r\n\t\t{ REQUIRED_EXP: 95 },\r\n\t\t{ REQUIRED_EXP: 125 },\r\n\t\t{ REQUIRED_EXP: 145 },\r\n\t\t{ REQUIRED_EXP: 170 },\r\n\t\t{ REQUIRED_EXP: 200 },\r\n\t\t{ REQUIRED_EXP: 245 },\r\n\t],\r\n\tTASK_DIFFICULTY: {\r\n\t\tEASY: 1,\r\n\t\tMEDIUM: 2,\r\n\t\tHARD: 3,\r\n\t},\r\n\tTASK_TYPE: {\r\n\t\tTODO: 'todo',\r\n\t\tSCHEDULE: 'schedule',\r\n\t\tHABIT: 'habit',\r\n\t},\r\n\tPLAYER_REDUCER: {\r\n\t\tCHANGE_EXP: 'exp',\r\n\t\tCHANGE_HP: 'hp',\r\n\t},\r\n\tTASK_REDUCER: {\r\n\t\tADD_TASK: 'add',\r\n\t\tREMOVE_TASK: 'remove',\r\n\t\tFILTER_TASK: 'filter',\r\n\t\tEDIT_TASK: 'edit',\r\n\t\tSET_ACTIVE_CATEGORY: 'activeCat',\r\n\t\tSET_COMPLITED_TASKS: 'complitedTasks',\r\n\t},\r\n\tCOMPLITED_TASKS: {\r\n\t\tSUCCESS: 'success',\r\n\t\tFAIL: 'fail',\r\n\t},\r\n});\r\n","import React, { createContext, useReducer } from 'react';\r\nimport { PLAYER_REDUCER, LVL, MAX_HP } from '@utils/CONSTANTS';\r\n\r\nconst playerReducer = (state, action) => {\r\n\tconst { CHANGE_EXP, CHANGE_HP } = PLAYER_REDUCER;\r\n\r\n\tswitch (action.type) {\r\n\t\tcase CHANGE_EXP:\r\n\t\t\tlet newExp = state.exp + action.value;\r\n\t\t\tlet newLvl = state.lvl;\r\n\t\t\tlet newHp = state.hp;\r\n\t\t\tif (newExp > LVL[state.lvl - 1].REQUIRED_EXP) {\r\n\t\t\t\tnewLvl++;\r\n\t\t\t\tnewExp -= state.exp;\r\n\t\t\t\tnewHp = MAX_HP;\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\texp: newExp,\r\n\t\t\t\tlvl: newLvl,\r\n\t\t\t\thp: newHp,\r\n\t\t\t};\r\n\t\tcase CHANGE_HP:\r\n\t\t\t// action.hp usually will be negative to reduce HP\r\n\t\t\treturn state.hp + action.value <= 0\r\n\t\t\t\t? { ...state, hp: MAX_HP, lvl: 1, exp: 0 }\r\n\t\t\t\t: { ...state, hp: state.hp + action.value };\r\n\t\tdefault:\r\n\t\t\tthrow new Error(`Unhandled action type: ${action.type}`);\r\n\t}\r\n};\r\n\r\nconst initPlayerState = {\r\n\tname: 'Guest',\r\n\texp: 20,\r\n\tlvl: 4,\r\n\thp: 20,\r\n};\r\n\r\nexport const PlayerContext = createContext([\r\n\t'default value from PlayerContext',\r\n]);\r\nPlayerContext.displayName = 'PlayerContext';\r\n\r\nexport const PlayerProvider = ({ children }) => {\r\n\tconst [playerState, dispatch] = useReducer(playerReducer, initPlayerState);\r\n\r\n\treturn (\r\n\t\t<PlayerContext.Provider value={[playerState, dispatch]}>\r\n\t\t\t{children}\r\n\t\t</PlayerContext.Provider>\r\n\t);\r\n};\r\n","import React, { createContext, useReducer, useState } from 'react';\r\nimport {\r\n\tTASK_REDUCER,\r\n\tTASK_DIFFICULTY,\r\n\tTASK_TYPE,\r\n\tCOMPLITED_TASKS,\r\n} from '@utils/CONSTANTS';\r\n\r\nconst {\r\n\tADD_TASK,\r\n\tREMOVE_TASK,\r\n\tEDIT_TASK,\r\n\tSET_ACTIVE_CATEGORY,\r\n\tFILTER_TASK,\r\n\tSET_COMPLITED_TASKS,\r\n} = TASK_REDUCER;\r\nconst { TODO, HABIT, SCHEDULE } = TASK_TYPE;\r\nconst { SUCCESS, FAIL } = COMPLITED_TASKS;\r\n\r\nconst taskReducer = (state, action) => {\r\n\tconsole.log('state ', state, ' action: ', action);\r\n\tswitch (action.type) {\r\n\t\tcase ADD_TASK:\r\n\t\t\tconst newTask = action.value;\r\n\t\t\tstate.length > 0\r\n\t\t\t\t? (newTask.id = state[state.length - 1].id + 1)\r\n\t\t\t\t: (newTask.id = 1);\r\n\t\t\tlocalStorage.setItem(\r\n\t\t\t\tSET_ACTIVE_CATEGORY[0],\r\n\t\t\t\tJSON.stringify([...state, newTask])\r\n\t\t\t);\r\n\t\t\treturn [...state, newTask];\r\n\t\tcase REMOVE_TASK:\r\n\t\t\tconst filteredState = state.filter((task) => task.id !== action.value.id);\r\n\t\t\t// localStorage.setItem(taskType, JSON.stringify(filteredState));\r\n\t\t\treturn filteredState;\r\n\t\tcase FILTER_TASK:\r\n\t\t\treturn action.filter;\r\n\t\tcase EDIT_TASK:\r\n\t\t\tconst index = state.findIndex((task) => task.id === action.value.id);\r\n\t\t\tconst editedState = [...state];\r\n\t\t\teditedState[index] = action.value;\r\n\t\t\t// localStorage.setItem(taskType, JSON.stringify(editedState));\r\n\t\t\treturn editedState;\r\n\t\tcase SET_ACTIVE_CATEGORY:\r\n\t\t\tif (Object.values(TASK_TYPE).includes(action.value)) return action.value;\r\n\t\t\telse throw new Error(`Unhandled task type ${action.value}`);\r\n\t\tcase SET_COMPLITED_TASKS:\r\n\t\t\tconst newComplitedTasks = {\r\n\t\t\t\t...state,\r\n\t\t\t\t[action.value]: state[action.value] + 1,\r\n\t\t\t};\r\n\t\t\tlocalStorage.setItem(\r\n\t\t\t\tSET_COMPLITED_TASKS,\r\n\t\t\t\tJSON.stringify(newComplitedTasks)\r\n\t\t\t);\r\n\t\t\treturn newComplitedTasks;\r\n\t\tdefault:\r\n\t\t\tthrow new Error(`Unhandled action type: ${action.type}`);\r\n\t}\r\n};\r\n\r\n// const exampleTask = {\r\n// \ttitle: \"It's example todo task. You can remove it but not yet\",\r\n// \tdifficulty: TASK_DIFFICULTY.EASY,\r\n// \tid: 0,\r\n// };\r\n\r\nexport const TasksContext = createContext(['default value from TaskContext']);\r\nTasksContext.displayName = 'TasksContext';\r\n\r\nexport const TasksProvider = ({ children }) => {\r\n\tconst [todos, dispatchTodos] = useReducer(\r\n\t\ttaskReducer,\r\n\t\tJSON.parse(localStorage.getItem(TODO)) || []\r\n\t);\r\n\tconst [schedules, dispatchSchedules] = useReducer(\r\n\t\ttaskReducer,\r\n\t\tJSON.parse(localStorage.getItem(SCHEDULE)) || []\r\n\t);\r\n\tconst [habits, dispatchHabits] = useReducer(\r\n\t\ttaskReducer,\r\n\t\tJSON.parse(localStorage.getItem(HABIT)) || []\r\n\t);\r\n\tconst [filter, dispatchFilter] = useReducer(taskReducer, '');\r\n\tconst [activeCategory, dispatchCategory] = useReducer(taskReducer, TODO);\r\n\tconst [complitedTasks, dispatchComplitedTasks] = useReducer(\r\n\t\ttaskReducer,\r\n\t\tJSON.parse(localStorage.getItem(SET_COMPLITED_TASKS)) || {\r\n\t\t\t[SUCCESS]: 0,\r\n\t\t\t[FAIL]: 0,\r\n\t\t}\r\n\t);\r\n\r\n\treturn (\r\n\t\t<TasksContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\t[TODO]: [todos, dispatchTodos],\r\n\t\t\t\t[SCHEDULE]: [schedules, dispatchSchedules],\r\n\t\t\t\t[HABIT]: [habits, dispatchHabits],\r\n\t\t\t\t[FILTER_TASK]: [filter, dispatchFilter],\r\n\t\t\t\t[SET_ACTIVE_CATEGORY]: [activeCategory, dispatchCategory],\r\n\t\t\t\t[SET_COMPLITED_TASKS]: [complitedTasks, dispatchComplitedTasks],\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</TasksContext.Provider>\r\n\t);\r\n};\r\n","import { PropTypes } from 'prop-types';\r\nimport './Button.scss';\r\n\r\nconst Button = ({\r\n\tchildren,\r\n\thandleClick,\r\n\ttype = 'button',\r\n\taddClass = undefined,\r\n}) => {\r\n\treturn (\r\n\t\t<button\r\n\t\t\tclassName={`button ${addClass ? addClass : ''}`}\r\n\t\t\ttype={type}\r\n\t\t\tonClick={handleClick && ((ev) => handleClick(ev))}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nButton.propTypes = {\r\n\tcontent: PropTypes.node,\r\n\thandleClick: PropTypes.func,\r\n\ttype: PropTypes.string,\r\n};\r\n\r\nexport default Button;\r\n","import { createContext, useState } from 'react';\r\n\r\nconst initState = false;\r\n\r\nexport const ToggleMenuContext = createContext(\r\n\t'default value from MenuToggleContext'\r\n);\r\nToggleMenuContext.displayName = 'ToggleMenuContext';\r\n\r\nexport const ToggleMenuProvider = ({ children }) => {\r\n\tconst [isMenuOpen, setMenuToggle] = useState(initState);\r\n\tconst toggleMenu = () => setMenuToggle((pervState) => !pervState);\r\n\r\n\treturn (\r\n\t\t<ToggleMenuContext.Provider value={[isMenuOpen, toggleMenu]}>\r\n\t\t\t{children}\r\n\t\t</ToggleMenuContext.Provider>\r\n\t);\r\n};\r\n","import React, { useContext } from 'react';\r\nimport Button from '@atoms/Button/Button';\r\nimport { ToggleMenuContext } from '@contexts/ToggleMenuProvider';\r\nimport { List } from 'react-bootstrap-icons';\r\nimport './HamburgerButton.scss';\r\n\r\nconst HamburgerButton = ({ addClass = '' }) => {\r\n\tconst [isMenuOpen, toggleMenu] = useContext(ToggleMenuContext);\r\n\r\n\treturn (\r\n\t\t<Button\r\n\t\t\taddClass={`hamburger-btn button--borderless ${addClass}`}\r\n\t\t\thandleClick={() => toggleMenu()}\r\n\t\t>\r\n\t\t\t<List className=\"hamburger-btn__icon\" />\r\n\t\t</Button>\r\n\t);\r\n};\r\n\r\nexport default HamburgerButton;\r\n","import React from 'react';\r\nimport './PageHeader.scss';\r\n\r\nconst PageHeader = ({ children, addClass = '' }) => {\r\n\treturn <header className={`page-header ${addClass}`}>{children}</header>;\r\n};\r\n\r\nexport default PageHeader;\r\n","import './ProgressRing.scss';\r\n\r\nconst ProgressRing = ({ radius, stroke, progressPerc, children, addClass }) => {\r\n\tconst circumference = radius * 2 * Math.PI;\r\n\tconst strokeDashoffset = circumference - (progressPerc / 100) * circumference;\r\n\r\n\treturn (\r\n\t\t<svg\r\n\t\t\twidth=\"64\"\r\n\t\t\theight=\"64\"\r\n\t\t\tclassName={`progress-ring ${addClass ? addClass : ''}`}\r\n\t\t>\r\n\t\t\t<circle\r\n\t\t\t\tclassName=\"progress-ring__circle progress-ring__circle--bg\"\r\n\t\t\t\tstrokeWidth={stroke}\r\n\t\t\t\tr={radius - stroke / 2}\r\n\t\t\t\tcx={radius}\r\n\t\t\t\tcy={radius}\r\n\t\t\t/>\r\n\t\t\t<circle\r\n\t\t\t\tclassName=\"progress-ring__circle progress-ring__circle--indicator\"\r\n\t\t\t\tstrokeWidth={stroke}\r\n\t\t\t\tstrokeDasharray={`${circumference} ${circumference}`}\r\n\t\t\t\tstrokeDashoffset={strokeDashoffset}\r\n\t\t\t\tr={radius - stroke / 2}\r\n\t\t\t\tcx={radius}\r\n\t\t\t\tcy={radius}\r\n\t\t\t/>\r\n\t\t\t<text className=\"progress-ring__text\" x=\"50%\" y=\"50%\">\r\n\t\t\t\t{children}\r\n\t\t\t</text>\r\n\t\t</svg>\r\n\t);\r\n};\r\n\r\nexport default ProgressRing;\r\n","import './ProgressBar.scss';\r\n\r\nconst ProgressBar = ({ addClass, percent }) => (\r\n\t<div className={`progress-bar ${addClass ? addClass : ''}`}>\r\n\t\t<div className=\"progress-bar__inner\" style={{ width: `${percent}%` }}></div>\r\n\t</div>\r\n);\r\n\r\nexport default ProgressBar;\r\n","import { LVL } from '@utils/CONSTANTS';\r\n\r\nconst calcLvlProgressPerc = (exp, lvl) => {\r\n\tlet perc = null;\r\n\tif (lvl > 1) {\r\n\t\tperc = (exp / LVL[lvl - 1].REQUIRED_EXP) * 100;\r\n\t} else {\r\n\t\tperc = exp * 100;\r\n\t}\r\n\tif (perc === 100) perc = 0;\r\n\treturn perc;\r\n};\r\n\r\nexport default calcLvlProgressPerc;\r\n","import React from 'react';\r\nimport './Input.scss';\r\n\r\nconst Input = ({\r\n\ttype = 'text',\r\n\tvalue,\r\n\taddClass,\r\n\tplaceholder = null,\r\n\tname = null,\r\n\thandleChange,\r\n\tvalidation,\r\n}) => {\r\n\tconst attrs = {\r\n\t\ttype: type,\r\n\t\tname: name,\r\n\t\tvalue: value,\r\n\t\t...(placeholder && { placeholder: placeholder }),\r\n\t\t...(handleChange && { onChange: (ev) => handleChange(ev) }),\r\n\t\tclassName: `input-${type} ${addClass ? addClass : ''}`,\r\n\t};\r\n\r\n\treturn <input {...attrs} {...validation} />;\r\n};\r\n\r\nexport default Input;\r\n","import './Label.scss';\r\n\r\nconst Label = ({ children, addClass }) => (\r\n\t<label className={`label ${addClass ? addClass : ''}`}>{children}</label>\r\n);\r\n\r\nexport default Label;\r\n","import Input from '@atoms/Input/Input';\r\nimport Label from '@atoms/Label/Label';\r\n\r\nconst FormField = ({\r\n\ttype = 'text',\r\n\tvalue,\r\n\tname = null,\r\n\tlabelClass,\r\n\tinputClass,\r\n\tplaceholder = null,\r\n\thandleChange,\r\n\tvalidation,\r\n\tregister,\r\n\tchildren,\r\n}) => {\r\n\treturn (\r\n\t\t<Label addClass={labelClass}>\r\n\t\t\t{children}\r\n\t\t\t<Input\r\n\t\t\t\ttype={type}\r\n\t\t\t\tname={name}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\taddClass={inputClass}\r\n\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\thandleChange={handleChange}\r\n\t\t\t\tvalidation={validation}\r\n\t\t\t\tregister={register}\r\n\t\t\t/>\r\n\t\t</Label>\r\n\t);\r\n};\r\n\r\nexport default FormField;\r\n","import React, { useState } from 'react';\r\nimport { TASK_DIFFICULTY } from '@utils/CONSTANTS';\r\nimport Button from '@atoms/Button/Button';\r\nimport FormField from '@molecules/FormField/FormField';\r\nimport './TaskForm.scss';\r\n\r\nconst TaskForm = ({ addClass, formToggler, handleSubmit, handleReset }) => {\r\n\tconst validation = { required: true };\r\n\r\n\tconst [isFormOpen, toggleForm] = formToggler;\r\n\r\n\tconst initialFormState = {\r\n\t\ttitle: '',\r\n\t\tdifficulty: null,\r\n\t\tid: null,\r\n\t};\r\n\r\n\tconst [formState, setFormState] = useState(initialFormState);\r\n\r\n\tconst difficultyLvls = Object.values(TASK_DIFFICULTY);\r\n\r\n\treturn (\r\n\t\t<form\r\n\t\t\tclassName={`task-form ${!isFormOpen ? 'task-form--hidden' : ''} ${\r\n\t\t\t\taddClass ? addClass : ''\r\n\t\t\t}`}\r\n\t\t\tonSubmit={(ev) => {\r\n\t\t\t\tev.preventDefault();\r\n\t\t\t\thandleSubmit(formState);\r\n\t\t\t\tsetFormState(initialFormState);\r\n\t\t\t\ttoggleForm();\r\n\t\t\t}}\r\n\t\t\tonReset={() => {\r\n\t\t\t\tsetFormState(initialFormState);\r\n\t\t\t\thandleReset !== undefined && handleReset();\r\n\t\t\t\ttoggleForm();\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<FormField\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tname=\"title\"\r\n\t\t\t\thandleChange={(ev) => {\r\n\t\t\t\t\tsetFormState((pervState) => {\r\n\t\t\t\t\t\treturn { ...pervState, title: ev.target.value };\r\n\t\t\t\t\t});\r\n\t\t\t\t}}\r\n\t\t\t\tvalue={formState.title}\r\n\t\t\t\tvalidation={validation}\r\n\t\t\t\tlabelClass=\"task-form__title\"\r\n\t\t\t>\r\n\t\t\t\tTitle:\r\n\t\t\t</FormField>\r\n\t\t\t<p>Difficulty: </p>\r\n\t\t\t<div className=\"task-form__inner\">\r\n\t\t\t\t{difficultyLvls.map((difficultyLvl, index) => (\r\n\t\t\t\t\t<FormField\r\n\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\tvalue={difficultyLvl}\r\n\t\t\t\t\t\tname=\"difficulty\"\r\n\t\t\t\t\t\thandleChange={(ev) => {\r\n\t\t\t\t\t\t\tsetFormState((pervState) => {\r\n\t\t\t\t\t\t\t\treturn { ...pervState, difficulty: parseInt(ev.target.value) };\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tvalidation={validation}\r\n\t\t\t\t\t\tinputClass=\"input--as-btn\"\r\n\t\t\t\t\t\tlabelClass={`label--as-btn ${\r\n\t\t\t\t\t\t\tformState.difficulty == difficultyLvl\r\n\t\t\t\t\t\t\t\t? 'label--as-btn--checked'\r\n\t\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{['Easy', 'Medium', 'Hard'][index]}\r\n\t\t\t\t\t</FormField>\r\n\t\t\t\t))}\r\n\t\t\t\t<Button type=\"submit\" addClass={'button__submit'}>\r\n\t\t\t\t\tSubmit\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button type=\"reset\" addClass={'button__reset'}>\r\n\t\t\t\t\tCancel\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default TaskForm;\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useToggle = (initState) => {\r\n\tconst [state, setState] = useState(initState);\r\n\tconst toggle = () => setState((pervState) => !pervState);\r\n\treturn [state, toggle];\r\n};\r\n\r\nuseToggle.propTypes = {\r\n\tinitState: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default useToggle;\r\n","import React, { useContext } from 'react';\r\nimport { List, PlusLg } from 'react-bootstrap-icons';\r\nimport { PlayerContext } from '@contexts/PlayerProvider';\r\nimport { TasksContext } from '@contexts/TasksProvider';\r\nimport Button from '@atoms/Button/Button';\r\nimport HamburgerButton from '@molecules/HamburgerButton/HamburgerButton';\r\nimport PageHeader from '@atoms/PageHeader/PageHeader';\r\nimport ProgressRing from '@atoms/ProgressRing/ProgressRing';\r\nimport ProgressBar from '@atoms/ProgressBar/ProgressBar';\r\nimport calcLvlProgressPerc from '@utils/calcLvlProgressPerc';\r\nimport { MAX_HP, LVL, TASK_REDUCER } from '@utils/CONSTANTS';\r\nimport TaskForm from '@organisms/TaskForm/TaskForm';\r\nimport useToggle from '@hooks/useToggle';\r\nimport './HomeHeader.scss';\r\n\r\nconst HomeHeader = () => {\r\n\tconst [playerState] = useContext(PlayerContext);\r\n\tconst { name, exp, lvl, hp } = playerState;\r\n\tconst { SET_ACTIVE_CATEGORY, ADD_TASK } = TASK_REDUCER;\r\n\r\n\tconst {\r\n\t\t[SET_ACTIVE_CATEGORY]: [activeCategory, dispatchCategory],\r\n\t} = useContext(TasksContext);\r\n\r\n\tconst {\r\n\t\t[activeCategory]: [tasks, dispatchTask],\r\n\t} = useContext(TasksContext);\r\n\r\n\tconst [isFormOpen, toggleForm] = useToggle(false);\r\n\r\n\tconst lvlProgressPrec = calcLvlProgressPerc(exp, lvl);\r\n\r\n\tconst handleSubmit = ({ title, difficulty }) => {\r\n\t\tdispatchTask({\r\n\t\t\ttype: ADD_TASK,\r\n\t\t\tvalue: {\r\n\t\t\t\ttitle: title,\r\n\t\t\t\tdifficulty: difficulty,\r\n\t\t\t\tid: null,\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<PageHeader addClass=\"home-header\">\r\n\t\t\t<HamburgerButton addClass=\"home-header__menu-btn\" />\r\n\t\t\t<h1 className=\"home-header__player-name\">{name}</h1>\r\n\t\t\t<div className=\"home-header__lvl-progress\">\r\n\t\t\t\t<ProgressRing radius={32} stroke={8} progressPerc={lvlProgressPrec}>\r\n\t\t\t\t\t{lvl}\r\n\t\t\t\t</ProgressRing>\r\n\t\t\t\t<p className=\"home-header__label\">{`${exp}/${\r\n\t\t\t\t\tLVL[lvl - 1].REQUIRED_EXP\r\n\t\t\t\t} EXP`}</p>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"home-header__hp-bar\">\r\n\t\t\t\t<ProgressBar percent={(hp / MAX_HP) * 100} />\r\n\t\t\t\t<p className=\"home-header__label\">{`${hp}/${MAX_HP} HP`}</p>\r\n\t\t\t</div>\r\n\t\t\t<Button\r\n\t\t\t\thandleClick={() => toggleForm()}\r\n\t\t\t\taddClass={`button--borderless home-header__add-task-btn ${\r\n\t\t\t\t\tisFormOpen ? 'home-header__add-task-btn--hidden' : ''\r\n\t\t\t\t}`}\r\n\t\t\t>\r\n\t\t\t\t<PlusLg className=\"home-header__plus-icon\" />\r\n\t\t\t</Button>\r\n\r\n\t\t\t<TaskForm\r\n\t\t\t\tformToggler={[isFormOpen, toggleForm]}\r\n\t\t\t\taddClass=\"home-header__form\"\r\n\t\t\t\thandleSubmit={handleSubmit}\r\n\t\t\t/>\r\n\t\t</PageHeader>\r\n\t);\r\n};\r\n\r\nexport default HomeHeader;\r\n","import React, { useContext } from 'react';\r\nimport { TasksContext } from '@contexts/TasksProvider';\r\nimport { TASK_REDUCER } from '@utils/CONSTANTS';\r\nimport { Search, XLg } from 'react-bootstrap-icons';\r\nimport useToggle from '@hooks/useToggle';\r\nimport Button from '@atoms/Button/Button';\r\nimport Input from '@atoms/Input/Input';\r\nimport './SearchTask.scss';\r\n\r\nconst SearchTask = () => {\r\n\tconst { FILTER_TASK } = TASK_REDUCER;\r\n\tconst {\r\n\t\t[TASK_REDUCER.FILTER_TASK]: [filter, dispatchFilter],\r\n\t} = useContext(TasksContext);\r\n\r\n\tconst [isHidden, toggleHidden] = useToggle(true);\r\n\r\n\treturn (\r\n\t\t<form\r\n\t\t\tclassName={`search-task ${isHidden ? 'search-task--hidden' : ''}`}\r\n\t\t\tonSubmit={(ev) => {\r\n\t\t\t\tev.preventDefault();\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\taddClass={`input-text--light search-task__input ${\r\n\t\t\t\t\tisHidden ? 'search-task__input--hidden' : ''\r\n\t\t\t\t}`}\r\n\t\t\t\tvalue={filter}\r\n\t\t\t\thandleChange={(ev) => {\r\n\t\t\t\t\tdispatchFilter({\r\n\t\t\t\t\t\ttype: TASK_REDUCER.FILTER_TASK,\r\n\t\t\t\t\t\tfilter: ev.target.value,\r\n\t\t\t\t\t});\r\n\t\t\t\t}}\r\n\t\t\t\tplaceholder=\"start searching...\"\r\n\t\t\t/>\r\n\t\t\t<Button\r\n\t\t\t\taddClass={`button--borderless`}\r\n\t\t\t\thandleClick={() => {\r\n\t\t\t\t\ttoggleHidden();\r\n\t\t\t\t\tif (!isHidden) {\r\n\t\t\t\t\t\tdispatchFilter({\r\n\t\t\t\t\t\t\ttype: TASK_REDUCER.FILTER_TASK,\r\n\t\t\t\t\t\t\tfilter: '',\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{isHidden ? (\r\n\t\t\t\t\t<Search className=\"search-task__search-icon\" />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<XLg className=\"search-task__search-icon\" />\r\n\t\t\t\t)}\r\n\t\t\t</Button>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default SearchTask;\r\n","import { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst defaultOptions = {\r\n\troot: null,\r\n\trootMargin: '0px',\r\n\tthreshold: 0.5,\r\n};\r\n\r\nconst useIntresectionObserver = (\r\n\trefsArr,\r\n\tcallback,\r\n\toptions = defaultOptions\r\n) => {\r\n\tuseEffect(() => {\r\n\t\tconst observer = new IntersectionObserver((entries) => {\r\n\t\t\tentries.forEach(callback);\r\n\t\t}, options);\r\n\r\n\t\trefsArr.forEach((ref) => {\r\n\t\t\tobserver.observe(ref);\r\n\t\t});\r\n\t}, []);\r\n};\r\n\r\nuseIntresectionObserver.propTypes = {\r\n\trefArr: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n\tcallback: PropTypes.func.isRequired,\r\n\toptions: PropTypes.object,\r\n};\r\n\r\nexport default useIntresectionObserver;\r\n","const filterTaskArr = (filter, tasks) => {\r\n\tif (filter !== '') {\r\n\t\tconst filteredTask = tasks.filter((task) =>\r\n\t\t\ttask.title.indexOf(filter) !== -1 ? true : false\r\n\t\t);\r\n\t\treturn filteredTask.length > 0 ? filteredTask : null;\r\n\t} else {\r\n\t\treturn tasks.length > 0 ? tasks : null;\r\n\t}\r\n};\r\n\r\nexport default filterTaskArr;\r\n","import React, { useContext } from 'react';\r\nimport {\r\n\tPlusLg,\r\n\tCheckLg,\r\n\tXLg,\r\n\tStarFill,\r\n\tDashLg,\r\n\tPencilFill,\r\n\tTrashFill,\r\n} from 'react-bootstrap-icons';\r\nimport {\r\n\tTASK_TYPE,\r\n\tPLAYER_REDUCER,\r\n\tTASK_REDUCER,\r\n\tCOMPLITED_TASKS,\r\n} from '@utils/CONSTANTS';\r\nimport { PlayerContext } from '@contexts/PlayerProvider';\r\nimport { TasksContext } from '@contexts/TasksProvider';\r\nimport useToggle from '@hooks/useToggle';\r\nimport Button from '@atoms/Button/Button';\r\nimport TaskForm from '@organisms/TaskForm/TaskForm';\r\nimport './Task.scss';\r\n\r\nconst Task = ({ taskType, task, dispatchTask }) => {\r\n\tconst { TODO, SCHEDULE } = TASK_TYPE;\r\n\tconst { FAIL, SUCCESS } = COMPLITED_TASKS;\r\n\tconst { id, title, difficulty } = task;\r\n\r\n\tconst [playerState, dispatchPlayer] = useContext(PlayerContext);\r\n\tconst {\r\n\t\t[TASK_REDUCER.SET_COMPLITED_TASKS]: [\r\n\t\t\tcomplitedTasks,\r\n\t\t\tdispatchComplitedTasks,\r\n\t\t],\r\n\t} = useContext(TasksContext);\r\n\r\n\tconst [isFormOpen, toggleForm] = useToggle(false);\r\n\tconst [isOptionsBarOpen, toggleOptionsBar] = useToggle(false);\r\n\r\n\tlet difficultyIndex = [];\r\n\tfor (let i = 0; i < difficulty; i++) {\r\n\t\tdifficultyIndex.push(<StarFill key={i} />);\r\n\t}\r\n\r\n\tconst increaseEXP = () => {\r\n\t\tdispatchPlayer({\r\n\t\t\ttype: PLAYER_REDUCER.CHANGE_EXP,\r\n\t\t\tvalue: difficulty,\r\n\t\t});\r\n\t};\r\n\r\n\tconst reduceHP = () => {\r\n\t\tdispatchPlayer({\r\n\t\t\ttype: PLAYER_REDUCER.CHANGE_HP,\r\n\t\t\tvalue: -difficulty,\r\n\t\t});\r\n\t};\r\n\r\n\tconst removeTask = () => {\r\n\t\tdispatchTask({ type: TASK_REDUCER.REMOVE_TASK, value: task });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={`task task--${taskType}`}>\r\n\t\t\t<Button\r\n\t\t\t\taddClass=\"task__btn task__btn--left\"\r\n\t\t\t\thandleClick={() => {\r\n\t\t\t\t\tincreaseEXP();\r\n\t\t\t\t\tdispatchComplitedTasks({\r\n\t\t\t\t\t\ttype: TASK_REDUCER.SET_COMPLITED_TASKS,\r\n\t\t\t\t\t\tvalue: SUCCESS,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (taskType === TODO) {\r\n\t\t\t\t\t\tremoveTask(id);\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{taskType === TODO || SCHEDULE ? (\r\n\t\t\t\t\t<CheckLg className=\"task__icon\" />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<PlusLg className=\"task__icon\" />\r\n\t\t\t\t)}\r\n\t\t\t</Button>\r\n\t\t\t<div className=\"task__info\">\r\n\t\t\t\t<div onClick={() => toggleOptionsBar()}>\r\n\t\t\t\t\t<h3 className=\"task__title\">{title}</h3>\r\n\t\t\t\t\t<div className=\"task__difficulty\">{difficultyIndex}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={`task__options-bar ${\r\n\t\t\t\t\t\tisOptionsBarOpen ? 'task__options-bar--expanded' : ''\r\n\t\t\t\t\t}`}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\thandleClick={() => removeTask()}\r\n\t\t\t\t\t\taddClass=\"task-form__options-btn\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<TrashFill />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\thandleClick={() => toggleForm()}\r\n\t\t\t\t\t\taddClass=\"task-form__options-btn\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<PencilFill />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<TaskForm\r\n\t\t\t\t\tformToggler={[isFormOpen, toggleForm]}\r\n\t\t\t\t\taddClass=\"task-form--light task-form--column\"\r\n\t\t\t\t\thandleSubmit={(task) => {\r\n\t\t\t\t\t\tif (task.title !== '' && task.difficulty !== null) {\r\n\t\t\t\t\t\t\tdispatchTask({\r\n\t\t\t\t\t\t\t\ttype: TASK_REDUCER.EDIT_TASK,\r\n\t\t\t\t\t\t\t\tvalue: { ...task, id: id },\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t\thandleReset={toggleOptionsBar}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t{taskType !== TODO && (\r\n\t\t\t\t<Button\r\n\t\t\t\t\taddClass=\"task__btn task__btn--right\"\r\n\t\t\t\t\thandleClick={() => {\r\n\t\t\t\t\t\treduceHP();\r\n\t\t\t\t\t\tdispatchComplitedTasks({\r\n\t\t\t\t\t\t\ttype: TASK_REDUCER.SET_COMPLITED_TASKS,\r\n\t\t\t\t\t\t\tvalue: FAIL,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{taskType === SCHEDULE ? (\r\n\t\t\t\t\t\t<XLg className=\"task__icon\" />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<DashLg className=\"task__icon\" />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Button>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Task;\r\n","import React, { forwardRef, useContext, useEffect } from 'react';\r\nimport filterTaskArr from '@utils/filterTaskArr';\r\nimport { TasksContext } from '@contexts/TasksProvider';\r\nimport Task from '@organisms/Task/Task';\r\nimport './TaskList.scss';\r\n\r\nconst TaskList = forwardRef(({ taskType }, ref) => {\r\n\tconst {\r\n\t\t[taskType]: [tasks, dispatchTask],\r\n\t\tfilter: [filter, dispatchFilter],\r\n\t} = useContext(TasksContext);\r\n\r\n\tlet tasksToShow = filterTaskArr(filter, tasks);\r\n\r\n\treturn (\r\n\t\t<div className=\"task-list\" data-task-type={taskType} ref={ref}>\r\n\t\t\t{tasksToShow ? (\r\n\t\t\t\ttasksToShow.map((task) => (\r\n\t\t\t\t\t<Task\r\n\t\t\t\t\t\ttaskType={taskType}\r\n\t\t\t\t\t\ttask={task}\r\n\t\t\t\t\t\tkey={task.id}\r\n\t\t\t\t\t\tdispatchTask={(type, action) => {\r\n\t\t\t\t\t\t\tconsole.log(type, action, tasks);\r\n\t\t\t\t\t\t\tdispatchTask(type, action);\r\n\t\t\t\t\t\t\tlocalStorage.setItem(taskType, JSON.stringify(tasks));\r\n\t\t\t\t\t\t\tconsole.log(type, action, tasks);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))\r\n\t\t\t) : (\r\n\t\t\t\t<p className=\"task-list__no-tasks\">No tasks</p>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n});\r\n\r\nexport default TaskList;\r\n","import React, { useContext } from 'react';\r\nimport { TASK_TYPE, TASK_REDUCER } from '@utils/CONSTANTS';\r\nimport useIntresectionObserver from '@hooks/useIntresectionObserver';\r\nimport { TasksContext } from '@contexts/TasksProvider';\r\nimport TaskList from '@organisms/TaskList/TaskList';\r\nimport './TaskCategories.scss';\r\n\r\nconst TaskCategories = ({ taskListsRefs }) => {\r\n\tconst {\r\n\t\t[TASK_REDUCER.SET_ACTIVE_CATEGORY]: [activeCat, dispatchActiveCat],\r\n\t} = useContext(TasksContext);\r\n\r\n\tconst callback = (entry) => {\r\n\t\tif (entry.intersectionRatio > 0.5) {\r\n\t\t\tconst taskType = entry.target.getAttribute('data-task-type');\r\n\t\t\tdispatchActiveCat({\r\n\t\t\t\ttype: TASK_REDUCER.SET_ACTIVE_CATEGORY,\r\n\t\t\t\tvalue: taskType,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tuseIntresectionObserver(taskListsRefs.current, callback);\r\n\r\n\treturn (\r\n\t\t<div className=\"task-categories\">\r\n\t\t\t<TaskList\r\n\t\t\t\ttaskType={TASK_TYPE.TODO}\r\n\t\t\t\tref={(elem) => (taskListsRefs.current[0] = elem)}\r\n\t\t\t/>\r\n\t\t\t<TaskList\r\n\t\t\t\ttaskType={TASK_TYPE.SCHEDULE}\r\n\t\t\t\tref={(elem) => (taskListsRefs.current[1] = elem)}\r\n\t\t\t/>\r\n\t\t\t<TaskList\r\n\t\t\t\ttaskType={TASK_TYPE.HABIT}\r\n\t\t\t\tref={(elem) => (taskListsRefs.current[2] = elem)}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TaskCategories;\r\n","const scrollHorizontally = (elem) => {\r\n\tdocument.querySelector('.task-categories').scrollTo({\r\n\t\ttop: 0,\r\n\t\tleft: elem.offsetLeft,\r\n\t\tbehavior: 'smooth',\r\n\t});\r\n};\r\n\r\nexport default scrollHorizontally;\r\n","import { useContext } from 'react';\r\nimport { TASK_TYPE, TASK_REDUCER } from '@utils/CONSTANTS';\r\nimport { CheckAll, CalendarWeek, ClipboardData } from 'react-bootstrap-icons';\r\nimport scrollHorizontally from '@utils/scrollHorizontally';\r\nimport { TasksContext } from '@contexts/TasksProvider';\r\nimport './TaskCategoriesNav.scss';\r\nimport Button from '@components/atoms/Button/Button';\r\n\r\nconst TaskCategoriesNav = ({ taskListsRefs }) => {\r\n\tconst {\r\n\t\t[TASK_REDUCER.SET_ACTIVE_CATEGORY]: [activeCat, dispatchActiveCat],\r\n\t} = useContext(TasksContext);\r\n\r\n\tconst setActiveCatClass = (taskType) =>\r\n\t\t`categories-nav__btn ${\r\n\t\t\ttaskType === activeCat ? 'categories-nav__btn--active' : ''\r\n\t\t}`;\r\n\r\n\treturn (\r\n\t\t<div className=\"categories-nav\">\r\n\t\t\t<Button\r\n\t\t\t\taddClass={setActiveCatClass(TASK_TYPE.TODO)}\r\n\t\t\t\thandleClick={() => scrollHorizontally(taskListsRefs.current[0])}\r\n\t\t\t>\r\n\t\t\t\t<CheckAll className=\"categories-nav__icon\" />\r\n\t\t\t\t<p className=\"categories-nav__name\">To do's</p>\r\n\t\t\t</Button>\r\n\t\t\t<Button\r\n\t\t\t\taddClass={setActiveCatClass(TASK_TYPE.SCHEDULE)}\r\n\t\t\t\thandleClick={() => scrollHorizontally(taskListsRefs.current[1])}\r\n\t\t\t>\r\n\t\t\t\t{/* <ArrowRepeat /> or <BarChartLine /> */}\r\n\t\t\t\t<CalendarWeek className=\"categories-nav__icon\" />\r\n\t\t\t\t<p className=\"categories-nav__name\">Schedules</p>\r\n\t\t\t</Button>\r\n\t\t\t<Button\r\n\t\t\t\taddClass={setActiveCatClass(TASK_TYPE.HABIT)}\r\n\t\t\t\thandleClick={() => scrollHorizontally(taskListsRefs.current[2])}\r\n\t\t\t>\r\n\t\t\t\t<ClipboardData className=\"categories-nav__icon\" />\r\n\t\t\t\t<p className=\"categories-nav__name\">Habits</p>\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TaskCategoriesNav;\r\n","import React, { useRef } from 'react';\r\nimport HomeHeader from '@organisms/HomeHeader/HomeHeader';\r\nimport SearchTask from '@organisms/SearchTask/SearchTask';\r\nimport TaskCategories from '@organisms/TaskCategories/TaskCategories';\r\nimport TaskCategoriesNav from '@organisms/TaskCategoriesNav/TaskCategriesNav';\r\n\r\nfunction HomePage() {\r\n\tconst taskListsRefs = useRef([]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<HomeHeader />\r\n\t\t\t<SearchTask />\r\n\t\t\t<TaskCategories taskListsRefs={taskListsRefs} />\r\n\t\t\t<TaskCategoriesNav taskListsRefs={taskListsRefs} />\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default HomePage;\r\n","import PageHeader from '@atoms/PageHeader/PageHeader';\r\nimport HamburgerButton from '@molecules/HamburgerButton/HamburgerButton';\r\nimport './StatsHeader.scss';\r\n\r\nconst StatsHeader = () => {\r\n\treturn (\r\n\t\t<PageHeader addClass=\"stats-header\">\r\n\t\t\t<HamburgerButton addClass=\"stats-header__menu-btn\" />\r\n\t\t\t<h1 className=\"stats-header__page-title\">Stats</h1>\r\n\t\t</PageHeader>\r\n\t);\r\n};\r\n\r\nexport default StatsHeader;\r\n","import React from 'react';\r\nimport './PieChart.scss';\r\n\r\nconst PieChart = ({ chartSlices, addClass = '' }) => {\r\n\tconst slicesArr = chartSlices.map(\r\n\t\t(slice, i, arr) =>\r\n\t\t\t`${slice.color} ${i === 0 ? 0 : arr[i - 1].perc / 100}turn ${\r\n\t\t\t\tslice.perc / 100\r\n\t\t\t}turn`\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={`pie-chart ${addClass}`}\r\n\t\t\tstyle={{ backgroundImage: `conic-gradient(${slicesArr.join(', ')})` }}\r\n\t\t></div>\r\n\t);\r\n};\r\n\r\nexport default PieChart;\r\n","import React, { useContext } from 'react';\r\nimport { COMPLITED_TASKS, TASK_TYPE, TASK_REDUCER } from '@utils/CONSTANTS';\r\nimport StatsHeader from '@organisms/StatsHeader/StatsHeader';\r\nimport PieChart from '@atoms/PieChart/PieChart';\r\nimport { TasksContext } from '@contexts/TasksProvider';\r\n\r\nconst { SUCCESS, FAIL } = COMPLITED_TASKS;\r\nconst { TODO, SCHEDULE, HABIT } = TASK_TYPE;\r\n\r\nfunction StatsPage() {\r\n\tconst {\r\n\t\t[TASK_REDUCER.SET_COMPLITED_TASKS]: [\r\n\t\t\tcomplitedTasks,\r\n\t\t\tdispatchComplitedTasks,\r\n\t\t],\r\n\t\t[TODO]: [todosState, dispatchTodos],\r\n\t\t[SCHEDULE]: [schedulesState, dispatchSchedules],\r\n\t\t[HABIT]: [habitsState, dispatchHabits],\r\n\t} = useContext(TasksContext);\r\n\r\n\tconst sum = complitedTasks[FAIL] + complitedTasks[SUCCESS];\r\n\tconst failPerc = (complitedTasks[FAIL] / sum) * 100;\r\n\tconst successPerc = (complitedTasks[SUCCESS] / sum) * 100;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<StatsHeader />\r\n\t\t\t<main className=\"main-content\">\r\n\t\t\t\t<h2>Player</h2>\r\n\t\t\t\t<p>Current level: </p>\r\n\t\t\t\t<p>Current exp points: </p>\r\n\t\t\t\t<p>All time exp points: </p>\r\n\t\t\t\t<h2>Tasks</h2>\r\n\t\t\t\t<p>successful/failed completed task</p>\r\n\t\t\t\t<PieChart\r\n\t\t\t\t\tchartSlices={[\r\n\t\t\t\t\t\t{ color: 'green', perc: successPerc },\r\n\t\t\t\t\t\t{ color: 'red', perc: failPerc },\r\n\t\t\t\t\t]}\r\n\t\t\t\t/>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span className=\"red-box\"></span>failed task /\r\n\t\t\t\t\t<span className=\"green-box\"></span>successful task\r\n\t\t\t\t</p>\r\n\r\n\t\t\t\t<p>currently active tasks</p>\r\n\t\t\t\t<p>TODO's: {todosState.length}</p>\r\n\t\t\t\t<p>Schedules: {schedulesState.length}</p>\r\n\t\t\t\t<p>Habits: {habitsState.length}</p>\r\n\t\t\t</main>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default StatsPage;\r\n","export default function RewardsPage() {\r\n\treturn <div>rewards</div>;\r\n}\r\n","export default function SettingsPage() {\r\n\treturn <div>settings</div>;\r\n}\r\n","export default function AboutPage() {\r\n\treturn <div>about</div>;\r\n}\r\n","import { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ToggleMenuContext } from '@contexts/ToggleMenuProvider';\r\nimport Button from '@atoms/Button/Button';\r\nimport { XLg } from 'react-bootstrap-icons';\r\nimport './SideMenu.scss';\r\n\r\nconst SideMenu = () => {\r\n\tconst [isMenuOpen, toggleMenu] = useContext(ToggleMenuContext);\r\n\r\n\treturn (\r\n\t\t<div className={`side-menu ${isMenuOpen ? 'side-menu--open' : ''}`}>\r\n\t\t\t<div\r\n\t\t\t\tclassName={`side-menu__bg ${isMenuOpen ? 'side-menu__bg--open' : ''}`}\r\n\t\t\t></div>\r\n\t\t\t<nav\r\n\t\t\t\tclassName={`side-menu__app-menu ${\r\n\t\t\t\t\tisMenuOpen ? 'side-menu__app-menu--open' : ''\r\n\t\t\t\t}`}\r\n\t\t\t>\r\n\t\t\t\t<Button\r\n\t\t\t\t\thandleClick={() => toggleMenu()}\r\n\t\t\t\t\taddClass=\"button--borderless side-menu__close-menu-btn\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<XLg className=\"side-menu__close-icon\" />\r\n\t\t\t\t</Button>\r\n\t\t\t\t<ul className=\"side-menu__list\">\r\n\t\t\t\t\t<li className=\"side-menu__item\" onClick={() => toggleMenu()}>\r\n\t\t\t\t\t\t<Link to=\"/\" className=\"side-menu__link\">\r\n\t\t\t\t\t\t\tHome\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"side-menu__item\" onClick={() => toggleMenu()}>\r\n\t\t\t\t\t\t<Link to=\"/stats\" className=\"side-menu__link\">\r\n\t\t\t\t\t\t\tStatistic\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"side-menu__item\" onClick={() => toggleMenu()}>\r\n\t\t\t\t\t\t<Link to=\"/rewards\" className=\"side-menu__link\">\r\n\t\t\t\t\t\t\tRewards\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"side-menu__item\" onClick={() => toggleMenu()}>\r\n\t\t\t\t\t\t<Link to=\"/settings\" className=\"side-menu__link\">\r\n\t\t\t\t\t\t\tSettings\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"side-menu__item\" onClick={() => toggleMenu()}>\r\n\t\t\t\t\t\t<Link to=\"/about\" className=\"side-menu__link\">\r\n\t\t\t\t\t\t\tAbout author\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</nav>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SideMenu;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport HomePage from '@pages/HomePage/HomePage';\r\nimport StatsPage from '@pages/StatsPage/StatsPage';\r\nimport RewardsPage from '@pages/RewardsPage/RewardsPage';\r\nimport SettingsPage from '@pages/SettingsPage/SettingsPage';\r\nimport AboutPage from '@pages/AboutPage/AboutPage';\r\nimport SideMenu from '@organisms/SideMenu/SideMenu';\r\nimport { PlayerProvider } from '@contexts/PlayerProvider';\r\nimport { TasksProvider } from '@contexts/TasksProvider';\r\nimport { ToggleMenuProvider } from '@contexts/ToggleMenuProvider';\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<PlayerProvider>\r\n\t\t\t<TasksProvider>\r\n\t\t\t\t<ToggleMenuProvider>\r\n\t\t\t\t\t<Router>\r\n\t\t\t\t\t\t<SideMenu />\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<Route exact path=\"/\">\r\n\t\t\t\t\t\t\t\t<HomePage />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route path=\"/stats\">\r\n\t\t\t\t\t\t\t\t<StatsPage />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route path=\"/rewards\">\r\n\t\t\t\t\t\t\t\t<RewardsPage />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route path=\"/settings\">\r\n\t\t\t\t\t\t\t\t<SettingsPage />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route path=\"/about\">\r\n\t\t\t\t\t\t\t\t<AboutPage />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t</Router>\r\n\t\t\t\t</ToggleMenuProvider>\r\n\t\t\t</TasksProvider>\r\n\t\t</PlayerProvider>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '@scss/index.scss';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}